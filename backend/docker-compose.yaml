version: '3.8'
services:
  redis:
    image: redis
    container_name: cache
    expose:
      - 6379

  mongodb_1:
    image: mongo:4.2
    command:
      [
        "--replSet",
        "my-replica-set",
        "--bind_ip_all",
        "--port",
        "30001"
      ]
    volumes:
      - ./data/mongo-1:/data/db
    ports:
      - 30001:30001
    healthcheck:
      test: test $$(echo "rs.initiate({_id:'my-replica-set',members:[{_id:0,host:\"mongo1:30001\"},{_id:1,host:\"mongo2:30002\"},{_id:2,host:\"mongo3:30003\"}]}).ok || rs.status().ok" | mongo --port 30001 --quiet) -eq 1
      interval: 10s
      start_period: 30s

  mongodb_2:
    image: mongo:4.2
    command:
      [
        "--replSet",
        "my-replica-set",
        "--bind_ip_all",
        "--port",
        "30002"
      ]
    volumes:
      - ./data/mongo-2:/data/db
    ports:
      - 30002:30002

  mongodb_3:
    image: mongo:4.2
    command:
      [
        "--replSet",
        "my-replica-set",
        "--bind_ip_all",
        "--port",
        "30003"
      ]
    volumes:
      - ./data/mongo-3:/data/db
    ports:
      - 30003:30003

  cinema:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '4000:4000'
      - "81:81"
    depends_on:
      - redis
      - mongodb_1
      - mongodb_2
      - mongodb_3
    links:
      - redis
      - mongodb_1
      - mongodb_2
      - mongodb_3
    environment:
      - PORT=4000
      - REDIS_URL=redis
      - DATABASE_URL=mongodb://mongodb_1:30001,mongodb_2:30002,mongodb_3:30003/?replicaSet=my-replica-set
      - JWT_SECRET=helloworld
    env_file:
      - .env
#    volumes:
#      - ./avatars:/usr/cinema/avatar


#volumes:
